
entity WxUser{
	wxNickName String maxlength(64) /**微信昵称*/
    wxGender Gender /**微信性别*/
    wxCountry String maxlength(32) /**微信国家*/
    wxProvince String maxlength(32) /**微信省*/
    wxCity String maxlength(32) /**微信市*/
    wxHeadimgurl String maxlength(250) /**微信头像图片地址*/
    wxUnionid String maxlength(29) /**微信unionid*/
    wxLanguage String maxlength(32) /**微信语言*/
    gender Gender /**表单填报性别（部分用户的微信性别可能不是实际性别）*/
	userStatus UserStatus /**用户状态*/
    registerChannel RegisterChannel /**注册渠道*/
    registerDateTime ZonedDateTime /**注册时间*/
    pushLimit Integer /**每日主动匹配记录数限制，默认为1。特权用户可以上调该限制*/
}

enum UserStatus {
	ACTIVE, // 活跃的
    UNACTIVE, // 不活跃

    LEFT, // 取关了
    FORBIDDEN // 被拉黑
}

enum Gender {
	MALE, FEMALE
}

enum RegisterChannel {
	POSTER, // 海报
    SITE, // 定点宣传
    BUSSTATION, // 公交站广告
    WECHAT, // 微信推广
    QQ // QQ推广
}

entity Broker{
	name String maxlength(32) /**广告经济商名称*/
}

relationship OneToMany {
	/**广告经济商-微信用户*/
    Broker{wxUsers} to WxUser{broker(name)}
}

entity BaseProperty{
    propertyName String required maxlength(64) /**属性名称：身高等*/
    propertyDescribe String maxlength(256) /**属性描述*/
    propertyType PropertyType /**属性类型：三观、性格、外貌等*/
    propertyScore Integer /**属性分值*/
    propertyMaxScore Integer /**属性最高分*/
    formyType FormyType /**匹配类型：1对1、1对多、多对多、其他(不计分项，例如照片等)*/
    completionRate Integer /**对完成率所占比重：5等*/
}

enum PropertyType {
	BASIC, // 基础
    VALUES, // 三观
    CHARACTER, // 性格
    LOOKS, // 外貌
    ASSET, // 资产
    INTEREST // 兴趣
}
enum FormyType {
	ONETOONE, ONETOMANY, MANYTOMANY,
    ONETORANGE, // 身高等
    LOCATION, // 家乡、当前所在地等
    SCHOOL, // 学校（其实可以改表单变成ONETOMANY）
    OTHER // 照片等
}

entity UserProperty{
    propertyValue String maxlength(1000) /**属性值:男等*/
    remark String maxlength(2000) /**记录更新情况*/
}

entity UserDemand{
    propertyValue String maxlength(1000) /**属性值:男等*/
    remark String maxlength(2000) /**记录更新情况*/
}

relationship OneToMany {
	/**微信用户-用户属性值*/
    WxUser{properties} to UserProperty{wxUser(wxNickName)}
    /**属性-用户属性值*/
    BaseProperty{propertyValues} to UserProperty{base(propertyName)}

    /**微信用户-用户需求值*/
    WxUser{demands} to UserDemand{wxUser(wxNickName)}
    /**属性-用户需求值*/
    BaseProperty{demandValues} to UserDemand{base(propertyName)}
}

entity BaseForm{
	formCode String required maxlength(64) /**金数据等表单的编号*/
    formName String maxlength(256) /**金数据等表单的名称*/
    formDescribe String maxlength(512) /**金数据等表单的描述*/
    formWeb String maxlength(512) /**金数据等表单的发布地址*/
    submitUrl String maxlength(512) /**金数据等表单数据结果的第三方推送地址*/
    vendor FormVendor /**第三方表单的提供商*/
    enabled Boolean /**是否启用*/
}

enum FormVendor {
	SELF, //自主表单
    JIN, //金数据
    OTHER //其他
}

entity FormSubmit{
    submitJosn String required maxlength(5000) /**提交的数据*/
    serialNumber Integer required /**金数据表单中的字段，代表数据表的主键*/
    creatorName String maxlength(64) /**金数据表单中的字段，创建者*/
    createdDateTime ZonedDateTime /**金数据表单中的字段，创建时间*/
    updatedDateTime ZonedDateTime /**金数据表单中的字段，更新时间*/
    infoRemoteIp String maxlength(20) /**金数据表单中的字段，提交人ip*/
    dealflag Boolean /**结果是否已处理*/
    computed Boolean /**结果是否已计算*/
}

entity FormField{
    fieldName String required maxlength(64) /**变量名称，基本为field_1等*/
    fieldDesc String maxlength(200) /**变量描述，你的性别等*/
    fieldType FieldType
}

enum FieldType {
	PROPERTY, // 自身属性
    DEMAND // 需求
}

relationship OneToMany {
	/**微信用户-用户提交表单*/
    WxUser{submits} to FormSubmit{wxUser(wxNickName)}
    /**表单-用户提交表单*/
    BaseForm{submits} to FormSubmit{base(formName)}

    /**表单-表单字段*/
    BaseForm{fields} to FormField{baseForm(formName)}
    /**属性-表单字段*/
    BaseProperty{fields} to FormField{baseProperty(propertyName)}
}

entity Algorithm{
	name String required maxlength(64) /**算法名*/
    genderWeight Double /**需求权重*/
    kValue Integer /**分块数*/
    remark String maxlength(2000) /**算法说明*/
    enabled Boolean /**是否启用*/
}

entity UserMatch{
    scoreAtoB Integer /**以A的需求对B打分*/
    scoreBtoA Integer
    scoreTotal Integer
    ratio Float /**匹配度，即匹配分除以可能的最高分*/
    rankA Integer /**如果是a对b的主动配对，b的排名数（位于1~pushLimit之间）*/
    rankB Integer
    matchType MatchType
    pushStatus PushStatus
}

enum MatchType {
	ATOB, // a对b是主动配对，即b是a的最佳匹配
    BTOA, // b对a是主动配对
    BIDIRECTIONAL // 双向的，即在这次计算中，互相在对方的前pushLimit个候选名单中
}

enum PushStatus {
	NEITHER, // 未推送
    A,
    B,// 已经被推送给一方（主要针对用户主动发起的匹配）
    BOTH // 双方均已推送
}

entity PushRecord {
	pushType PushType
    pushDateTime ZonedDateTime /**推送时间*/
    success Boolean /**是否推送成功*/
}

enum PushType {
	ASK, // 主动请求
    Regular // 定期推送
}



relationship OneToMany {
	/**用户配对绩效结果*/
    Algorithm{matches}
    to
    /**算法*/
    UserMatch{algorithm(name)}

    // /**微信用户-用户配对绩效结果（前后之和才为该用户的全部匹配）*/
    /**微信用户-用户配对绩效结果（位于前）*/
    WxUser{aMatches} to UserMatch{userA(wxNickName)}
    /**微信用户-用户配对绩效结果（位于后）*/
    WxUser{bMatches} to UserMatch{userB(wxNickName)}

    /**微信用户-结果推送*/
    WxUser{pushRecords} to PushRecord{user(wxNickName)}


}

relationship ManyToMany {
	/**用户配对绩效结果-结果推送*/
	UserMatch{pushRecords} to PushRecord{userMatches}

    /**过滤属性*/
    Algorithm{filterProperties(propertyName)}
    to
    /**作为过滤属性参与的算法*/
    BaseProperty{filterAlgorithms(name)}

    /**计分属性*/
    Algorithm{scoreProperties(propertyName)}
    to
    /**作为计分属性参与的算法*/
    BaseProperty{scoreAlgorithms(name)}
}

// Set pagination options
paginate * with pagination except WxUser, Algorithm, BaseProperty, BaseForm
paginate WxUser, Algorithm, BaseProperty, BaseForm with infinite-scroll
service * with serviceClass

filter WxUser

